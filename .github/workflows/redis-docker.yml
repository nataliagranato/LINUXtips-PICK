name: Build da imagem de container Redis 

on:
  push:
    branches:
      - 'main'

permissions:
  contents: read

jobs:
  build:
    name: Build da Imagem redis
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Fazer checkout do código
        uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Instalar Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Fazer login no Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extrair metadados (tags, labels) para Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: nataliagranato/redis

      - name: Gerar nome único para a tag
        id: generate-tag
        run: |
            # Obtém os primeiros 5 dígitos do hash do commit e a data
            SHORT_HASH=$(git log -1 --pretty=format:%h | cut -c1-5)
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            echo "tag=${SHORT_HASH}-${TIMESTAMP}" >> $GITHUB_ENV
            echo "::set-output name=tag::${SHORT_HASH}-${TIMESTAMP}"
        
      - name: Construir e enviar a imagem Docker
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6.14.0
        id: build-and-push
        with:
          context: ./redis
          file: ./redis/Dockerfile
          push: true
          tags: nataliagranato/redis:${{ steps.generate-tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Aqua Security Trivy
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0 # 0.29.0
        with:
            image-ref: nataliagranato/redis:${{ steps.generate-tag.outputs.tag }}
            format: 'sarif'
            severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
            output: 'trivy-results.sarif'
        
      - name: Fazer upload dos resultados do Trivy para a aba de Segurança do GitHub
        uses: github/codeql-action/upload-sarif@b56ba49b26e50535fa1e7f7db0f4f7b4bf65d80d # v3.28.10
        if: always()
        with:
            sarif_file: 'trivy-results.sarif'

      - name: Assinar imagem com uma chave
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY $images
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}